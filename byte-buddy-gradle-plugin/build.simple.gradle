plugins {
    id 'java'
    id 'java-gradle-plugin'
}

apply from: './main.gradle'

version = pom.parent.version.text().toString()

// At this point, it is not given that any artifact from the Maven build can be found in a repository.
def location = new File(project.buildscript.sourceFile.getParentFile(), "../byte-buddy/target/byte-buddy-${version}.jar").canonicalFile
logger.info("Relying on ${location.absolutePath} as Byte Buddy dependency")

if (gradle.gradleVersion.startsWith("2.")) { // support legacy version
    dependencies {
        compile gradleApi()
        if (location.exists()) {
            compile files(location.absolutePath)
        } else {
            logger.warn("${location.absolutePath} does not exist, can clean but not build project")
        }
        testCompile gradleTestKit()
        testCompile group: 'junit', name: 'junit', version: outerPom.properties.'version.junit'
        testCompile(group: 'org.mockito', name: 'mockito-core', version: outerPom.properties.'version.mockito') {
            exclude group: 'net.bytebuddy'
        }
    }
} else {
    dependencies {
        implementation gradleApi()
        if (location.exists()) {
            implementation files(location.absolutePath)
        } else {
            logger.warn("${location.absolutePath} does not exist, can clean but not build project")
        }
        testImplementation gradleTestKit()
        testImplementation group: 'junit', name: 'junit', version: outerPom.properties.'version.junit'
        testImplementation(group: 'org.mockito', name: 'mockito-core', version: outerPom.properties.'version.mockito') {
            exclude group: 'net.bytebuddy'
        }
    }
}
