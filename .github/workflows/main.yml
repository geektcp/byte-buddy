name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 1"

jobs:
  hotspot-ea:
    name: HotSpot (EA)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install JDK and build project
        run: |
          . ./.github/scripts/install-jdk.sh --feature ea --os linux-x64
          ./mvnw verify -Pjava14
  hotspot-supported:
    name: HotSpot (supported)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macOS-10.14, windows-2019]
        java: [8, 11, 13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Build project
        run: ./mvnw verify -Pintegration -Pjava${{ matrix.java }}
  hotspot-unsupported:
    name: HotSpot (unsupported)
    strategy:
      fail-fast: false
      matrix:
        java: [7, 9, 10, 12]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Build project
        run: ./mvnw verify -Pintegration -Pjava${{ matrix.java }}
  hotspot-legacy:
    name: HotSpot (legacy)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.6
          architecture: x64
      - name: Build project
        run: ./mvnw -s .mvn/nossl.settings.xml verify -Pintegration -Pjava6
  openj9-supported:
    name: OpenJ9 (supported)
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 13]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install JDK and build project
        run: |
          . ./.github/scripts/install-jdk.sh --url "https://api.adoptopenjdk.net/v2/binary/releases/openjdk${{ matrix.java }}?openjdk_impl=openj9&os=linux&arch=x64&release=latest&type=jdk&heap_size=normal"
          ./mvnw verify -Pintegration -Pjava${{ matrix.java }}
  coverage:
    name: Coverage
    runs-on: ubuntu-18.04
    needs: [hotspot-ea, hotspot-supported, hotspot-unsupported, hotspot-legacy, openj9-supported]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          architecture: x64
      - name: Build project
        run: ./mvnw jacoco:prepare-agent verify jacoco:report coveralls:report -DrepoToken=${{ secrets.coveralls }} -Pintegration
  release:
    name: Release new version
    runs-on: ubuntu-18.04
    needs: [coverage]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v1
        with:
          ref: master
      - name: Consider release
        id: release
        run: echo "##[set-output name=release;]$(git log --format=%B -n 1 | grep ^\[release\] | wc -l)"
      - uses: actions/setup-java@v1
        if: steps.release.outputs.release > 0
        with:
          java-version: 8
          architecture: x64
      - name: Publish new version
        if: steps.release.outputs.release > 0
        run: |
          echo "${{ secrets.gpg_secret }}" | gpg --batch --import
          export GPG_TTY=$(tty)
          ./mvnw -B -s .mvn/release.settings.xml release:prepare release:perform -Drepository.url=https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git -Dbintray.username=raphw -Dbintray.password=${{ secrets.bintray_password }} -Dgpg.passphrase=${{ secrets.gpg_passphrase }} -Dgpg.keyname=B4AC8CDC141AF0AE468D16921DA784CCB5C46DD5 -Dgradle.key=${{ secrets.gradle_key }} -Dgradle.secret=${{ secrets.gradle_secret }}
